(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{471:function(a,t,v){"use strict";v.r(t);var e=v(2),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"♥java8特性知识体系详解♥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#♥java8特性知识体系详解♥"}},[a._v("#")]),a._v(" ♥Java8特性知识体系详解♥")]),a._v(" "),t("blockquote",[t("p",[a._v("Java 8 新特性详解汇总。@pdai")]),a._v(" "),t("ul",[t("li",[a._v("Java 新特性的增加都是来源于 JSR或者JEP")]),a._v(" "),t("li",[a._v("JSR论坛: https://jcp.org/en/jsr/detail?id=335")])])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#java8%E7%89%B9%E6%80%A7%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3"}},[a._v("♥Java8特性知识体系详解♥")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB"}},[a._v("知识体系")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0"}},[a._v("相关文章")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%87%BD%E6%95%B0%E7%BC%96%E7%A8%8B"}},[a._v("函数编程")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#optional%E7%B1%BB"}},[a._v("Optional类")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#default%E6%96%B9%E6%B3%95"}},[a._v("default方法")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3"}},[a._v("类型注解")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E9%87%8D%E5%A4%8D%E6%B3%A8%E8%A7%A3"}},[a._v("重复注解")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD"}},[a._v("类型推断")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#jre-%E7%B2%BE%E7%AE%80"}},[a._v("JRE 精简")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#localdatelocaldatetime"}},[a._v("LocalDate/LocalDateTime")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#javafx"}},[a._v("JavaFX")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#permgen%E7%A7%BB%E9%99%A4"}},[a._v("PermGen移除")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#stampedlock"}},[a._v("StampedLock")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%B6%E5%AE%83%E6%9B%B4%E6%96%B0"}},[a._v("其它更新")])])])]),a._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3"}},[a._v("参考文档")])])])])]),a._v(" "),t("h2",{attrs:{id:"知识体系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识体系"}},[a._v("#")]),a._v(" 知识体系")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://www.pdai.tech/images/java/java8-overview.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"相关文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[a._v("#")]),a._v(" 相关文章")]),a._v(" "),t("h3",{attrs:{id:"函数编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数编程"}},[a._v("#")]),a._v(" 函数编程")]),a._v(" "),t("blockquote",[t("p",[a._v("面向对象编程是对数据进行抽象；函数式编程是对行为进行抽象。")])]),a._v(" "),t("ul",[t("li",[a._v("Lambda 表达式的特点")]),a._v(" "),t("li",[a._v("Lambda 表达式使用和Stream下的接口")]),a._v(" "),t("li",[a._v("函数接口定义和使用，四大内置函数接口Consumer，Function，Supplier, Predicate.")]),a._v(" "),t("li",[a._v("Comparator排序为例贯穿所有知识点。")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-stream.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 函数编程"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"optional类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#optional类"}},[a._v("#")]),a._v(" Optional类")]),a._v(" "),t("blockquote",[t("p",[a._v("这是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。")])]),a._v(" "),t("ul",[t("li",[a._v("Optional类的意义")]),a._v(" "),t("li",[a._v("Optional类有哪些常用的方法")]),a._v(" "),t("li",[a._v("Optional举例贯穿所有知识点")]),a._v(" "),t("li",[a._v("多重类嵌套Null值判断")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-optional.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - Optional类"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"default方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#default方法"}},[a._v("#")]),a._v(" default方法")]),a._v(" "),t("blockquote",[t("p",[a._v("默认方法给予我们修改接口而不破坏原来的实现类的结构提供了便利，目前java 8的集合框架已经大量使用了默认方法来改进了，当我们最终开始使用Java 8的lambdas表达式时，提供给我们一个平滑的过渡体验。")])]),a._v(" "),t("ul",[t("li",[a._v("为什么会出现默认方法?")]),a._v(" "),t("li",[a._v("接口中出现默认方法，且类可以实现多接口的，那和抽象类有啥区别?")]),a._v(" "),t("li",[a._v("多重实现的默认方法冲突怎么办?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-default.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - default方法"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"类型注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型注解"}},[a._v("#")]),a._v(" 类型注解")]),a._v(" "),t("blockquote",[t("p",[a._v("那充满争议的类型注解究竟是什么? 复杂还是便捷?")])]),a._v(" "),t("ul",[t("li",[a._v("注解在JDK哪个版本中出现的，可以在哪些地方用注解?")]),a._v(" "),t("li",[a._v("什么是类型注解?")]),a._v(" "),t("li",[a._v("类型注解的作用是什么?")]),a._v(" "),t("li",[a._v("为什么会出现类型注解(JSR308)?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-type-anno.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 类型注解"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"重复注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重复注解"}},[a._v("#")]),a._v(" 重复注解")]),a._v(" "),t("ul",[t("li",[a._v("Java8之前对重复注解是怎么做的?")]),a._v(" "),t("li",[a._v("Java8对重复注解添加了什么支持?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-anno-repeat.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 重复注解"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"类型推断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型推断"}},[a._v("#")]),a._v(" 类型推断")]),a._v(" "),t("blockquote",[t("p",[a._v("导致类型间互相转换的问题困扰着每个java程序员，通过编译器自动推断类型的东西可以稍微缓解一下类型转换太复杂的问题。")])]),a._v(" "),t("ul",[t("li",[a._v("什么是泛型?")]),a._v(" "),t("li",[a._v("Java7对泛型推断做了哪些优化?")]),a._v(" "),t("li",[a._v("Java8对此有做了哪些优化?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-type.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 类型推断优化"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"jre-精简"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jre-精简"}},[a._v("#")]),a._v(" JRE 精简")]),a._v(" "),t("blockquote",[t("p",[a._v("模块化特性是javaer所期待的特性, 一个占用资源少的JRE运行环境，紧凑的JRE特性的出现，能带来以后的物联网的发展，甚至还是会有大量的java应用程序出现在物联网上面。")])]),a._v(" "),t("ul",[t("li",[a._v("为什么精简Java8 JRE，及好处是啥?")]),a._v(" "),t("li",[a._v("紧凑的JRE分3种，分别是compact1、compact2、compact3，他们的关系是?")]),a._v(" "),t("li",[a._v("在不同平台上如何编译等?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-jre.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - JRE精简"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"localdate-localdatetime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localdate-localdatetime"}},[a._v("#")]),a._v(" LocalDate/LocalDateTime")]),a._v(" "),t("blockquote",[t("p",[a._v("Date/Calendar槽点, java8对其进行了重写。")])]),a._v(" "),t("ul",[t("li",[a._v("Java8之前的Date有哪些槽点? (Calendar的所有属性都是可变的，SimpleDateFormat的线程不安全性等)")]),a._v(" "),t("li",[a._v("Java8之前使用哪些常用的第三方时间库?")]),a._v(" "),t("li",[a._v("Java8关于时间和日期有哪些类和方法，变比Java8之前它的特点是什么?")]),a._v(" "),t("li",[a._v("其它语言时间库?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-localdatetime.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - LocalDate/LocalDateTime"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"javafx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javafx"}},[a._v("#")]),a._v(" JavaFX")]),a._v(" "),t("blockquote",[t("p",[a._v("JavaFX主要致力于富客户端开发，以弥补swing的缺陷，主要提供图形库与media库，支持audio,video,graphics,animation,3D等，同时采用现代化的css方式支持界面设计。同时又采用XUI方式以XML方式设计UI界面，达到显示与逻辑的分离。")])]),a._v(" "),t("ul",[t("li",[a._v("javaFX发展历程?")]),a._v(" "),t("li",[a._v("Java8对其增加了哪些特性?")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-javafx.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - JavaFX"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"permgen移除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#permgen移除"}},[a._v("#")]),a._v(" PermGen移除")]),a._v(" "),t("blockquote",[t("p",[a._v("PermGen space的全称是Permanent Generation space,是指内存的永久保存区域。PermGen space是Oracle-Sun Hotspot才有，JRockit以及J9是没有这个区域。")])]),a._v(" "),t("ul",[t("li",[a._v("Java8之前 “java.lang.OutOfMemoryError: PermGen space”是怎么引起的，怎么解决的?")]),a._v(" "),t("li",[a._v("新增加的元空间(Metaspace)包含哪些东西，画出图")]),a._v(" "),t("li",[a._v("元空间(Metaspace)和PermGen对比")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-permgen.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 移除Permgen"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"stampedlock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stampedlock"}},[a._v("#")]),a._v(" StampedLock")]),a._v(" "),t("ul",[t("li",[a._v("为什么会引入StampedLock")]),a._v(" "),t("li",[a._v("用Lock写悲观锁和乐观锁举例")]),a._v(" "),t("li",[a._v("用StampedLock写悲观锁和乐观锁举例")]),a._v(" "),t("li",[a._v("性能对比")])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-stampedlock.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - StampedLock"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"其它更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它更新"}},[a._v("#")]),a._v(" 其它更新")]),a._v(" "),t("ul",[t("li",[a._v("Java8 还有哪些其它更新\n"),t("ul",[t("li",[a._v("字符串")]),a._v(" "),t("li",[a._v("Base64")]),a._v(" "),t("li",[a._v("Random")]),a._v(" "),t("li",[a._v("Nashorn")]),a._v(" "),t("li",[a._v("...")])])])]),a._v(" "),t("p",[a._v("详细分析请参看: "),t("a",{attrs:{href:"https://www.pdai.tech/md/java/java8/java8-others.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java 8 - 其它更新"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[a._v("#")]),a._v(" 参考文档")]),a._v(" "),t("blockquote",[t("p",[a._v("主要参考自以下文档:")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Java 8 教程汇总 https://wizardforcel.gitbooks.io/java8-tutorials/content/index.html")])]),a._v(" "),t("li",[t("p",[a._v("Java8简明教程gitbook https://wizardforcel.gitbooks.io/modern-java")])]),a._v(" "),t("li",[t("p",[a._v("Java8简明教程 https://github.com/wizardforcel/modern-java-zh")])]),a._v(" "),t("li",[t("p",[a._v("Java8新特性探究 https://wizardforcel.gitbooks.io/java8-new-features/content/")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);